<?xml version="1.0"?>

<!--
  The contents of this file are subject to the Netscape Public
  License Version 1.1 (the "License"); you may not use this file
  except in compliance with the License. You may obtain a copy of
  the License at http://www.mozilla.org/NPL/

  Software distributed under the License is distributed on an "AS
  IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  implied. See the License for the specific language governing
  rights and limitations under the License.

  The Original Code is Mozilla Communicator client code, released
  March 31, 1998.

  The Initial Developer of the Original Code is Netscape
  Communications Corporation. Portions created by Netscape are
  Copyright (C) 1998-1999 Netscape Communications Corporation. All
  Rights Reserved.

  Contributor(s):
    Ben Goodger <ben@netscape.com>

-->

<?xml-stylesheet href="chrome://navigator/skin/navigator.css" type="text/css"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>

<window id="openLocation"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        class="dialog"
        style="width: 480px; height:320px"
        orient="vertical">

  <script id="sayHelloScript">
<![CDATA[
--Written for 5.0; could be made slightly cleaner with 5.1
--Splits a string based on a separator string or pattern;
--returns an array of pieces of the string.
--(May optionally supply a table as the third parameter which will be filled 
--with the results.)
function string:split( inSplitPattern, outResults )
  if not outResults then
    outResults = { }
  end
  local theStart = 1
  local theSplitStart, theSplitEnd = string.find( self, inSplitPattern, 
theStart )
  while theSplitStart do
    table.insert( outResults, string.sub( self, theStart, theSplitStart-1 ) )
    theStart = theSplitEnd + 1
    theSplitStart, theSplitEnd = string.find( self, inSplitPattern, theStart )
  end
  table.insert( outResults, string.sub( self, theStart ) )
  return outResults
end
function testProperty(id)
  el = XULWin.getRootElement():getElementById(id)
  input = XULWin.prompt("Key, value:", "")
  keys = input:split(",")
  if #keys ~= 2 then return end
  el:setAttribute(keys[1], keys[2])
end
]]>
  </script>

  <hbox align="center">
    <text class="label" value="Foo Label 1:" for="nerp1"/>
    <textbox flex="1" id="nerp1" disabled="true" value="disabled"/>
    <button label="Test Property APIs with Lua" oncommand="testProperty('nerp1')"/>
  </hbox>
  <hbox align="center">
    <text class="label" value="Foo Label 2:" for="nerp2"/>
    <textbox flex="1" id="nerp2" readonly="true" value="readonly"/>
    <button label="Test Property APIs" oncommand="testProperty('nerp2');"/>
  </hbox>
  <hbox align="center">
    <text class="label" value="Foo Label 2:" for="nerp2r"/>
    <textbox flex="1" id="nerp2r" readonly="true" disabled="true" value="readonly disabled"/>
    <button label="Test Property APIs" oncommand="testProperty('nerp2r');"/>
  </hbox>
  <hbox align="center">
    <text class="label" value="Foo Label 3:" for="nerp3"/>
    <textbox flex="1" id="nerp3" value="regular"/>
    <button label="Test Property APIs" oncommand="testProperty('nerp3');"/>
  </hbox>
  <hbox align="center">
    <text class="label" value="Foo Label 5:" for="nerp4"/>
    <menubutton label="regular menubutton">
      <menupopup>
        <menuitem label="foo 1"/>
        <menuitem label="foo 2"/>
        <menuitem label="foo 3"/>
      </menupopup>
    </menubutton>
    <menubutton label="disabled menubutton" disabled="true">
      <menupopup>
        <menuitem label="foo 1"/>
        <menuitem label="foo 2"/>
        <menuitem label="foo 3"/>
      </menupopup>
    </menubutton>
  </hbox>

  <hbox align="center">
    <text class="label" value="Foo Label 5:" for="nerp4"/>
    <menulist label="regular menulist">
      <menupopup>
        <menuitem label="foo 1"/>
        <menuitem label="foo 2"/>
        <menuitem label="foo 3"/>
      </menupopup>
    </menulist>
    <menulist label="disabled menulist" disabled="true">
      <menupopup>
        <menuitem label="foo 1"/>
        <menuitem label="foo 2"/>
        <menuitem label="foo 3"/>
      </menupopup>
    </menulist>
  </hbox>

  <hbox>
    <text class="label" value="Foo Label 4:"/>
    <vbox flex="1">
      <textbox flex="1"/>
      <vbox align="center">
        <hbox flex="1">
          <checkbox label="Checkbox 1" id="checkbox1"/>
          <spacer flex="1"/>
          <button label="Test Property APIs" oncommand="testProperty('checkbox1');"/>
        </hbox>
        <checkbox label="Checkbox 2" disabled="true" checked="true"/>
        <checkbox label="Checkbox 3"/>
      </vbox>
      <separator class="groove"/>
      <radiogroup id="group" orient="vertical">
        <hbox>
          <radio group="group" label="Radio 1" id="radio1"/>
          <spacer flex="1"/>
          <button label="Test Property APIs" oncommand="testProperty('radio1');"/>
        </hbox>
        <radio group="group" label="Radio 2"/>
        <radio group="group" label="Radio 3" disabled="true" checked="true"/>
      </radiogroup>
    </vbox>
  </hbox>

  <separator/>

  <hbox align="center">
    <text class="label" value="Foo Label 7:"/>
    <button label="Standard XUL Button"/>
    <button class="dialog" label="Dialog XUL Button"/>
    <button class="dialog" disabled="true" default="true" label="Disabled Button"/>
  </hbox>

  <separator/>

  <hbox>
    <vbox>
      <text class="label" value="Foo Label 6:"/>
      <spacer flex="1"/>
    </vbox>
    <textbox id="textarea" rows="3" multiline="true" value="Regular multiline textbox"/>
    <vbox>
      <button label="Test Property APIs" oncommand="testProperty('textarea');"/>
      <spacer flex="1"/>
    </vbox>
  </hbox>

  <hbox>
    <vbox>
      <text class="label" value="Foo Label 6:"/>
      <spacer flex="1"/>
    </vbox>
    <textbox rows="3" multiline="true" disabled="true" value="Disabled multiline textbox"/>
  </hbox>

  <separator/>

  <progressmeter mode="undetermined" flex="1"/>

  <script>
    <![CDATA[
    function advanceProgress()
      progressMeter = XULWin.getRootElement():getElementById("normal")
      value = tonumber(progressMeter:getAttribute('value'))
      if value <= 99 then
        newvalue = value + 1
        progressMeter:setAttribute('value', newvalue)
      else
        progressMeter:setAttribute('value', 0)
      end
      XULWin.setTimeout("advanceProgress()", 30)
    end

  ]]>
  </script>


  <hbox align="center">
    <progressmeter id="normal" mode="normal" flex="1"/>
    <button label="Advance Progress" oncommand="advanceProgress();"/>
  </hbox>

  <separator/>

  <!--<scrollbar orient="horizontal" />-->
  <scrollbar orient="horizontal" curpos="26" maxpos="100" increment="1" pageincrement="60"/>

</window>
